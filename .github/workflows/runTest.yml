name: runTest
on: [push]
jobs:
  test-python-app:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -el {0}
    steps:
    - uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: yacht_env
        environment-file: env/yacht_env.yml
    - name: make training data
      run: python -m src.make_training_data_from_sketches --ref_file './tests/testdata/20_genomes_sketches.zip' --ksize 31 --prefix 'gtdb_ani_thresh_0.95' --ani_thresh 0.95 --outdir ./ --force
    - name: run YACHT
      run: python -m src.run_YACHT --json ./gtdb_ani_thresh_0.95_config.json --sample_file './tests/testdata/sample.sig.zip' --significance 0.99 --min_coverage_list 1 0.6 0.2 0.1
    - name: test-unit
      run: pytest tests/test_unit.py --cov=./  --cov-report xml:covunit.xml
    - name: test-utils
      run: pytest tests/test_utils.py --cov=./  --cov-report xml:covutils.xml
    - name: test-workflow
      run: pytest tests/test_workflow.py --cov=./  --cov-report xml:covworkflow.xml
    - name: integration-tests
      run: pytest -vv tests/integration_tests.py --cov=./  --cov-report xml:covntegration.xml
    - name: unit-tests
      run: pytest -vv tests/unittests.py --cov=./  --cov-report xml:covunittests.xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./covunit.xml,./covutils.xml,./covworkflow.xml,./covntegration.xml,./covunittests.xml
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Badge Action
      uses: emibcn/badge-action@v2.0.2
            
